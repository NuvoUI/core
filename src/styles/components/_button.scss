// _button.scss
@use 'sass:map';

@use '../utilities/variables' as *;
@use '../utilities/typography' as *;
@use '../themes/theme' as *;

// Define text size map
$text-size-map: (
  'xs': 0.75rem,
  'sm': 0.875rem,
  'md': 1rem,
  'lg': 1.125rem,
  'xl': 1.25rem
);

// Button Base Mixins
@mixin btn-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border: 1px solid transparent;
  border-radius: 0.375rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.65;
  }

  // Loading state
  &.loading {
    position: relative;
    color: transparent !important;
    pointer-events: none;

    &::after {
      content: "";
      position: absolute;
      width: 1rem;
      height: 1rem;
      border: 1px solid;
      border-radius: 50%;
      border-right-color: transparent;
      animation: spin 0.75s linear infinite;
    }
  }
}

// Button Variants
@mixin btn-solid($color) {
  background-color: theme-color($color);
  color: white;//var(--text-inverse);

  &:hover:not(:disabled) {
    background-color: theme-color($color, 'hover');
  }

  &:active:not(:disabled) {
    background-color: theme-color($color, 'active');
  }

  &:disabled {
    background-color: theme-color($color, 'disabled');
  }
}

@mixin btn-outline($color) {
  background-color: transparent;
  border-color: theme-color($color);
  color: theme-color($color);

  &:hover:not(:disabled) {
    background-color: theme-color($color);
    color: var(--text-inverse);
  }

  &:active:not(:disabled) {
    background-color: theme-color($color, 'active');
  }

  &:disabled {
    border-color: theme-color($color, 'disabled');
    color: theme-color($color, 'disabled');
  }
}

@mixin btn-ghost($color) {
  background-color: transparent;
  color: theme-color($color);

  &:hover:not(:disabled) {
    background-color: theme-color($color, '10');
  }

  &:active:not(:disabled) {
    background-color: theme-color($color, '25');
  }

  &:disabled {
    color: theme-color($color, 'disabled');
  }
}

// Button Sizes
@mixin btn-size($size) {
  font-size: map.get($text-size-map, $size);
  
  $padding-map: (
    'xs': 0.25rem 0.5rem,
    'sm': 0.375rem 0.75rem,
    'md': 0.5rem 1rem,
    'lg': 0.75rem 1.5rem,
    'xl': 1rem 2rem
  );

  padding: map.get($padding-map, $size);

  .btn.icon {
    $icon-sizes: (
      'xs': 0.75rem,
      'sm': 1rem,
      'md': 1.25rem,
      'lg': 1.5rem,
      'xl': 1.75rem
    );
    
    width: map.get($icon-sizes, $size);
    height: map.get($icon-sizes, $size);
  }
}

// Button Shapes
@mixin btn-shape($shape) {
  @if $shape == 'rounded' {
    border-radius: 0.375rem;
  } @else if $shape == 'pill' {
    border-radius: 9999px;
  } @else if $shape == 'square' {
    border-radius: 0;
  }
}

// Base Button Class
.btn {
  @include btn-base;
  @include btn-size('md');
  @include btn-shape('rounded');


  // Outline variant
  &.outline {
    @include btn-outline('text-secondary'); // Default outline style
    
    // Color variants override
    @each $name, $color in $colors {
      &.#{$name} {
        @include btn-outline($name);
      }
    }
  }
  
  // Ghost variant
  &.ghost {
    @include btn-ghost('text-secondary'); // Default ghost style
    
    // Color variants override
    @each $name, $color in $colors {
      &.#{$name} {
        @include btn-ghost($name);
      }
    }
  }
  
  // Color variants for solid buttons
  @each $name, $color in $colors {
    &.#{$name} {
      @include btn-solid($name);
    }
  }
}


// Sizes
.btn.xs { @include btn-size('xs'); }
.btn.sm { @include btn-size('sm'); }
.btn.md { @include btn-size('md'); }
.btn.lg { @include btn-size('lg'); }
.btn.xl { @include btn-size('xl'); }

// Shapes
.btn.rounded { @include btn-shape('rounded'); }
.btn.pill { @include btn-shape('pill'); }
.btn.square { @include btn-shape('square'); }

// Icon Only Buttons
.btn.icon {
  padding: 0.5rem;
  
  &.btn-xs { padding: 0.25rem; }
  &.btn-sm { padding: 0.375rem; }
  &.btn-lg { padding: 0.75rem; }
  &.btn-xl { padding: 1rem; }
}

// Loading Animation
@keyframes spin {
  to { transform: rotate(360deg); }
}

/**


<!-- Basic buttons -->
<button class="btn primary">Primary</button>
<button class="btn outline secondary">Secondary</button>
<button class="btn ghost info">Info</button>

<!-- Sizes -->
<button class="btn primary xs">Extra Small</button>
<button class="btn primary xl">Extra Large</button>

<!-- Shapes -->
<button class="btn primary pill">Pill Button</button>

<!-- With Icons -->
<button class="btn btn-primary">
  <svg class="btn-icon"><!-- icon --></svg>
  With Icon
</button>

<!-- Icon Only -->
<button class="btn btn-primary btn-icon-only">
  <svg class="btn-icon"><!-- icon --></svg>
</button>

<!-- Loading State -->
<button class="btn btn-primary loading">Loading</button>

<!-- Disabled State -->
<button class="btn btn-primary" disabled>Disabled</button>

*/