// Section: Utilities
// Module: Media Queries

@use 'sass:map';
@use 'sass:meta';
@use './variables' as *;
@use './functions' as FN;


/**
 * @description Media query mixins.
 * @param {string|number} $breakpoint - The breakpoint value.
 * @param {string} $type - The media query type (e.g. 'lg', 'md').
 */
@mixin media-up($breakpoint) {
  @media screen and (min-width: #{FN.get-breakpoint-value($breakpoint)}) {
    @content;
  }
}

@mixin media-down($breakpoint) {
  @media screen and (max-width: (#{FN.get-breakpoint-value($breakpoint)} - 0.02px)) {
    @content;
  }
}

@mixin media-between($lower, $upper) {
  $lower-val: FN.get-breakpoint-value($lower);
  $upper-val: FN.get-breakpoint-value($upper);
  @media screen and (min-width: #{$lower-val}) and (max-width: (#{ $upper-val } - 0.02px)) {
    @content;
  }
}

// Only at specific breakpoint
@mixin media-only($breakpoint) { // BUG BUG BUG BUG BUG
  $min: FN.get-breakpoint-value($breakpoint);
  $next-breakpoint: null;
  
  @each $name, $width in $breakpoints {
    @if $width > $min and (not $next-breakpoint or $width < $next-breakpoint) {
      $next-breakpoint: #{$width};
    }
  }
  
  @if $next-breakpoint {
    @media (min-width: #{$min}) and (max-width: (#{ $next-breakpoint } - 1)) {
      @content;
    }
  } @else {
    @media (min-width: #{$min}) {
      @content;
    }
  }
}

// Touch devices
@mixin touch {
  @media (hover: none) and (pointer: coarse) {
    @content;
  }
}

// Print media
@mixin print {
  @media print {
    @content;
  }
}

// Example: @include supports(display: grid) { }
@mixin supports($property) {
  @supports (#{$property}) {
    @content;
  }
}

// Mixin: Dark Mode
// Applies styles when the user prefers a dark color scheme.
@mixin dark-mode {
  [data-theme='dark'] & {
    @content;
  }
}

// Device orientation
@mixin landscape {
  @media screen and (orientation: landscape) {
    @content;
  }
}

@mixin portrait {
  @media screen and (orientation: portrait) {
    @content;
  }
}

// Modern aspect ratio
@mixin aspect-ratio($ratio) {
  aspect-ratio: #{$ratio};
}

// Dynamic viewport units (modern browsers)
@mixin dvh {
  @supports (height: 100dvh) {
    height: 100dvh;
  }
  
  @supports not (height: 100dvh) {
    height: 100vh;
  }
}

// Safe area insets (notches, home indicators)
@mixin safe-area-inset($property, $position) {
  #{$property}: env(safe-area-inset-#{$position});
}

@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// High contrast mode
@mixin high-contrast {
  @media (forced-colors: active) {
    @content;
  }
}
