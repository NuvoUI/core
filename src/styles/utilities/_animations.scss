@use "sass:list";

@use "sass:map";
@use "../abstracts/functions" as *;

$generated-keyframes: ();

@mixin generate-bounce-keyframes($keyframeName, $x, $y) {
  @if not list.index($generated-keyframes, $keyframeName) {
    $generated-keyframes: list.append($generated-keyframes, $keyframeName) !global;

    @keyframes #{$keyframeName} {
      0% {
        transform: translateX(-#{$x}) translateY(-#{$y});
      }

      50% {
        transform: translateX(#{$x}) translateY(#{$y});
      }

      100% {
        transform: translateX(-#{$x}) translateY(-#{$y});
      }
    }
  }
}

@mixin animate-bounce($props) {
  $defaults: (
    vertical: 0%,
    horizontal: 0%,
    duration: 5s,
    timing: ease-in-out,
    iteration: infinite,
  );

  // Merge with defaults
  $props: map.merge($defaults, $props);
  $x: map.get($props, "horizontal");
  $y: map.get($props, "vertical");
  $duration: map.get($props, "duration");
  $easing: map.get($props, "timing");
  $iteration: map.get($props, "iteration");

  // Handle units
  $x-unit: if($x, safe-unit-name(get-unit($x)), "-");
  $y-unit: if($y, safe-unit-name(get-unit($y)), "-");

  // Clean values (remove units)
  $clean-x: if($x, strip-unit($x), 0);
  $clean-y: if($y, strip-unit($y), 0);
  $animation-name: anim-bounce-#{$clean-x}#{$x-unit}-#{$clean-y}#{$y-unit};

  & {
    animation: #{$animation-name} $duration $easing $iteration;
  }
  @include generate-bounce-keyframes($animation-name, $x, $y);
}

@keyframes fade-in-reveal {
  to {
    scale: 1;
    opacity: 1;
  }
}

@media (prefers-reduced-motion: no-preference) {
  .anim__fade-in-reveal {
    scale: 0.2;
    opacity: 0.7;
    animation: fade-in-reveal linear forwards;
    animation-timeline: view();
    animation-range-start: cover;
    animation-range-end: 550px;
  }
}

@mixin hover-ready {
  & {
    transition-property: all;
    transition-duration: 0.2s;
    transition-timing-function: ease-in-out; 
  }
}
