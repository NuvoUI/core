// _colors.scss - Color functions and scale generation
@use "sass:math";
@use "sass:color";
@use "sass:map";
@use "sass:meta";
@use "sass:list";
@use "sass:string";

@use "../config/feature-flags" as config-flags;
@use "../config/breakpoints" as config-breakpoint;
@use "../config/colors" as config-color;
@use "../config/theme-validation" as config-theme;
@use "../functions/colors" as color-fn;

// Adaptive contrast mixin
@mixin adaptive-contrast($color) {
    background-color: $color;
    color: color-fn.find-text-color($color);

    @media (prefers-contrast: more) {
        $adjusted: if(color.lightness($color) > 50%, color.adjust($color, $lightness: -10%), color.adjust($color, $lightness: 10%));

        background-color: $adjusted;
        color: color-fn.find-text-color($adjusted);
    }
}

// todo: documentation
@mixin bg($color, $shade: 500) {
    background-color: color-fn.get-color($color, $shade);
}

@mixin text-color($color-name, $shade: 500) {
    color: color-fn.get-color($color-name, $shade);
}

@mixin text-on-color($color-name, $shade: 500) {
    color: color-fn.find-text-color(color-fn.get-color($color-name, $shade));
}

@mixin gradient($direction, $colors...) {
    background-image: linear-gradient($direction, $colors);
}
