@use "sass:math";
@use 'sass:color';
@use 'sass:map';
@use 'sass:meta';
@use 'sass:list';

@use './variables' as *;

// Color Validation
@function is-valid-color($color) {
    @return meta.type-of($color) == 'color';
}

@function create-color-scale($color) {
    $scale: ();
    $stops: (
      50: 95%,
      100: 85%,
      200: 75%,
      300: 65%,
      400: 55%,
      500: 50%, // Base color
      600: 45%,
      700: 35%,
      800: 25%,
      900: 15%
    );
  
    @each $stop, $mix in $stops {
      $value: if($stop == 500,
        $color,
        if($stop < 500,
          color.mix(white, $color, $mix),
          color.mix(black, $color, (100% - $mix))
        )
      );
      $scale: map.set($scale, $stop, $value);
    }
    
    @return $scale;
  }


// Color Relationship Functions
@function find-text-color($background) {
    $luminance: luminance($background);
    @return if($luminance > 0.55, #000, #fff);
}

// Luminance Calculation
@function luminance($color) {
    $r: color.red($color) / 255;
    $g: color.green($color) / 255;
    $b: color.blue($color) / 255;
    
    $r: if($r <= 0.0393, $r / 12.92, pow(($r + 0.055) / 1.055, 2.4));
    $g: if($g <= 0.0393, $g / 12.92, pow(($g + 0.055) / 1.055, 2.4));
    $b: if($b <= 0.0393, $b / 12.92, pow(($b + 0.055) / 1.055, 2.4));
    
    @return $r * 0.2126 + $g * 0.7152 + $b * 0.0722;
}

// Context-Aware Colors
@mixin adaptive-contrast($background) {
    background: $background;
    color: find-text-color($background);
    
    @media (prefers-contrast: more) {
        $high-contrast: adjust-contrast($background, 20%);
        
        background: $high-contrast;
    }
}

// Filter Mixins
@mixin backdrop-filter($value) {
    backdrop-filter: $value;
}

@mixin filter($value) {
    filter: $value;
}

$colors: (
  'primary': create-color-scale($primary),
  'secondary': create-color-scale($secondary),
  'success': create-color-scale($success),
  'danger': create-color-scale($danger),
  'warning': create-color-scale($warning),
  'info': create-color-scale($info)
); 

// Glass Effect Utilities
.glass-effect {
    @include backdrop-filter(blur(10px));

    background-color: rgb(255 255 255 / 10%);
}

.frosted-glass {
    @include backdrop-filter(blur(5px) saturate(180%));
    
    background-color: rgb(255 255 255 / 80%);
}
