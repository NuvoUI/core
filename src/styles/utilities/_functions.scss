@use 'sass:string';
@use 'sass:math';

@function strip-unit($value) {
  @return math.div($value, ($value * 0 + 1));
}

@function safe-unit-name($unit) {
  
  @if $unit == '%' {
      @return 'per';
  } @else if $unit == '.' {
      @return 'dot';
  } @else {
      @return $unit;
  }
}

@function get-unit($value) {
  $value-str: #{$value};
  
  // Relative length units
  @if string.index($value-str, 'em') {
      @return 'em';
  } @else if string.index($value-str, 'rem') {
      @return 'rem';
  } @else if string.index($value-str, '%') {
      @return '%';
  }
  
  // Viewport units
  @else if string.index($value-str, 'vw') {
      @return 'vw';
  } @else if string.index($value-str, 'vh') {
      @return 'vh';
  } @else if string.index($value-str, 'vmin') {
      @return 'vmin';
  } @else if string.index($value-str, 'vmax') {
      @return 'vmax';
  }
  
  // Absolute length units
  @else if string.index($value-str, 'px') {
      @return 'px';
  } @else if string.index($value-str, 'cm') {
      @return 'cm';
  } @else if string.index($value-str, 'mm') {
      @return 'mm';
  } @else if string.index($value-str, 'in') {
      @return 'in';
  } @else if string.index($value-str, 'pt') {
      @return 'pt';
  } @else if string.index($value-str, 'pc') {
      @return 'pc';
  }
  
  // Return empty string if no unit found
  @return '';
}