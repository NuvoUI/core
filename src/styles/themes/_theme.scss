// _theme.scss - CSS variables and utility classes
@use "sass:color";
@use "sass:map";
@use "sass:string";
@use "sass:list";
@use "../utilities/colors" as COL;
@use "../abstracts/config" as VAR;
@use "../abstracts/functions" as FN;

@if FN.feature-enabled("theme") {
  :root,
  #{VAR.$parent-selector} [data-theme="light"] {
    // Theme color CSS variables
    @each $color-name, $scale in COL.$colors {
      --#{$color-name}: #{color.adjust(map.get($scale, 500), $alpha: 1)};
      @each $shade, $value in $scale {
        --#{$color-name}-#{$shade}: #{color.adjust($value, $alpha: 1)};
      }
    }

    // Primitive color CSS variables
    @each $color-name, $scale in COL.$colors-primitives {
      --#{$color-name}: #{color.adjust(map.get($scale, 500), $alpha: 1)};
      @each $shade, $value in $scale {
        --#{$color-name}-#{$shade}: #{color.adjust($value, $alpha: 1)};
      }
    }

    @each $token in VAR.$theme-tokens {
      --#{$token}: #{map.get(VAR.$light-theme, $token)};
      --inverted-#{$token}: #{map.get(VAR.$dark-theme, $token)};
    }
    @each $color-name, $color-val in VAR.$basic-colors {
      --#{$color-name}: #{$color-val};
    }

    // --button-text-color: #{map.get(VAR.$dark-theme, "text-default")};
    // --inverted-text-color: #{map.get(VAR.$dark-theme, "text-default")};

    // Light theme variables
    --button-bg-color: var(--primary);
    --button-bg-color-hover: var(--primary-600);
    --link-color: var(--primary);
    --link-hover-color: var(--primary-600);
  }

  @if VAR.$enable-dark-mode {
    // Dark theme settings
    [data-theme="dark"] {
      @each $token in VAR.$theme-tokens {
        --#{$token}: #{map.get(VAR.$dark-theme, $token)};
        --inverted-#{$token}: #{map.get(VAR.$light-theme, $token)};
      }

      --button-text-color: #{map.get(VAR.$light-theme, "text-default")};
      --button-bg-color: var(--primary);
      --button-bg-color-hover: var(--primary-400);
      --link-color: var(--primary);
      --link-hover-color: var(--primary-400);

      &::-webkit-scrollbar-track {
        background: var(--background);
      }

      &::-webkit-scrollbar-thumb {
        background-color: #555;
        border: 3px solid var(--background);
      }

      scrollbar-color: #555 var(--background);
    }
  }

  // -----------------------------------------------
  // COLOR UTILITY CLASSES
  // -----------------------------------------------

  // Theme color background utilities
  // primar, secondry, warning etc.
  @each $color-name, $scale in COL.$colors {
    @each $shade, $value in $scale {
      // Automatic text contrast for backgrounds
      #{VAR.$parent-selector} .text-on-#{$color-name}-#{$shade} {
        color: COL.find-text-color($value);
      }

      #{VAR.$parent-selector} .text-#{$color-name}-#{$shade},
      #{VAR.$parent-selector} .hover\:text-#{$color-name}-#{$shade}:hover,
      #{VAR.$parent-selector} .group:hover .group-hover\:text-#{$color-name}-#{$shade} {
        color: var(--#{$color-name}-#{$shade});
      }

      #{VAR.$parent-selector} .bg-#{$color-name}-#{$shade},
      #{VAR.$parent-selector} .hover\:bg-#{$color-name}-#{$shade}:hover,
      #{VAR.$parent-selector} .group:hover .group-hover\:bg-#{$color-name}-#{$shade} {
        background-color: var(--#{$color-name}-#{$shade});
      }

      #{VAR.$parent-selector} .border-#{$color-name}-#{$shade},
      #{VAR.$parent-selector} .hover\:border-#{$color-name}-#{$shade}:hover,
      #{VAR.$parent-selector} .group:hover .group-hover\:border-#{$color-name}-#{$shade} {
        border-color: var(--#{$color-name}-#{$shade});
      }
    }

    // Base color classes
    #{VAR.$parent-selector} .text-#{$color-name},
    #{VAR.$parent-selector} .hover\:text-#{$color-name}:hover,
    #{VAR.$parent-selector} .group:hover .group-hover\:text-#{$color-name} {
      color: var(--#{$color-name});
    }

    #{VAR.$parent-selector} .bg-#{$color-name},
    #{VAR.$parent-selector} .hover\:bg-#{$color-name}:hover,
    #{VAR.$parent-selector} .group:hover .group-hover\:bg-#{$color-name} {
      background-color: var(--#{$color-name});
    }

    #{VAR.$parent-selector} .border-#{$color-name},
    #{VAR.$parent-selector} .hover\:border-#{$color-name}:hover,
    #{VAR.$parent-selector} .group:hover .group-hover\:border-#{$color-name} {
      border-color: var(--#{$color-name});
    }
  }

  // Primitive color utilities
  // green, purple, pink etc.
  @each $color-name, $scale in COL.$colors-primitives {
    @each $shade, $value in $scale {
      #{VAR.$parent-selector} .text-on-#{$color-name}-#{$shade} {
        color: COL.find-text-color($value);
      }

      #{VAR.$parent-selector} .text-#{$color-name}-#{$shade},
      #{VAR.$parent-selector} .hover\:text-#{$color-name}-#{$shade}:hover,
      #{VAR.$parent-selector} .group:hover .group-hover\:text-#{$color-name}-#{$shade} {
        color: var(--#{$color-name}-#{$shade});
      }

      #{VAR.$parent-selector} .bg-#{$color-name}-#{$shade},
      #{VAR.$parent-selector} .hover\:bg-#{$color-name}-#{$shade}:hover,
      #{VAR.$parent-selector} .group:hover .group-hover\:bg-#{$color-name}-#{$shade} {
        background-color: var(--#{$color-name}-#{$shade});
      }

      #{VAR.$parent-selector} .border-#{$color-name}-#{$shade},
      #{VAR.$parent-selector} .hover\:border-#{$color-name}-#{$shade}:hover,
      #{VAR.$parent-selector} .group:hover .group-hover\:border-#{$color-name}-#{$shade} {
        border-color: var(--#{$color-name}-#{$shade});
      }
    }

    // Base color classes
    #{VAR.$parent-selector} .text-#{$color-name},
    #{VAR.$parent-selector} .hover\:text-#{$color-name}:hover,
    #{VAR.$parent-selector} .group:hover .group-hover\:text-#{$color-name} {
      color: var(--#{$color-name});
    }

    #{VAR.$parent-selector} .bg-#{$color-name},
    #{VAR.$parent-selector} .hover\:bg-#{$color-name}:hover,
    #{VAR.$parent-selector} .group:hover .group-hover\:bg-#{$color-name} {
      background-color: var(--#{$color-name});
    }

    #{VAR.$parent-selector} .border-#{$color-name},
    #{VAR.$parent-selector} .hover\:border-#{$color-name}:hover,
    #{VAR.$parent-selector} .group:hover .group-hover\:border-#{$color-name} {
      border-color: var(--#{$color-name});
    }
  }

  @each $color-name, $color-val in VAR.$basic-colors {
    // Base color classes
    #{VAR.$parent-selector} .text-#{$color-name},
    #{VAR.$parent-selector} .hover\:text-#{$color-name}:hover,
    #{VAR.$parent-selector} .group:hover .group-hover\:text-#{$color-name} {
      color: var(--#{$color-name});
    }

    #{VAR.$parent-selector} .bg-#{$color-name},
    #{VAR.$parent-selector} .hover\:bg-#{$color-name}:hover,
    #{VAR.$parent-selector} .group:hover .group-hover\:bg-#{$color-name} {
      background-color: var(--#{$color-name});
    }

    #{VAR.$parent-selector} .border-#{$color-name},
    #{VAR.$parent-selector} .hover\:border-#{$color-name}:hover,
    #{VAR.$parent-selector} .group:hover .group-hover\:border-#{$color-name} {
      border-color: var(--#{$color-name});
    }
  }

  @each $token in VAR.$theme-tokens {
    $parts: string.split($token, "-");
    $prefix: list.nth($parts, 1);

    #{VAR.$parent-selector} .#{$token},
    #{VAR.$parent-selector} .hover\:#{$token}:hover,
    #{VAR.$parent-selector} .group:hover .group-hover\:#{$token} {
      @if $prefix == "bg" {
        background-color: var(--#{$token});
      } @else if $prefix == "text" {
        color: var(--#{$token});
      } @else if $prefix == "border" {
        border-color: var(--#{$token});
      }
    }

    #{VAR.$parent-selector} .inverted-#{$token},
    #{VAR.$parent-selector} .hover\:inverted-#{$token}:hover,
    #{VAR.$parent-selector} .group:hover .group-hover\:inverted-#{$token} {
      @if $prefix == "bg" {
        background-color: var(--inverted-#{$token});
      } @else if $prefix == "text" {
        color: var(--inverted-#{$token});
      } @else if $prefix == "border" {
        border-color: var(--inverted-#{$token});
      } @else if $prefix == "fg" {
        color: var(--inverted-#{$token});
      }
    }
  }
}
