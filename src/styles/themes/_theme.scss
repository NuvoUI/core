// _theme.scss
@use 'sass:color';
@use 'sass:map';
@use '../utilities/variables' as *;


// Color variations percentage
$color-variations: (
  'lighter': 15%,
  'light': 10%,
  'dark': -10%,
  'darker': -15%
);

$opacity-levels: (
  '10': 0.1,
  '25': 0.25,
  '50': 0.5,
  '75': 0.75
);


@function theme-color($color-name, $variant: 'base') {
  @return var(--#{$color-name}#{if($variant == 'base', '', '-' + $variant)});
}

@mixin generate-theme-colors($theme) {
  @each $name, $color in $colors {
    // Base color
    --#{$name}: #{$color};
    --#{$name}-rgb: #{color.channel($color, 'red')}, #{color.channel($color, 'green')}, #{color.channel($color, 'blue')};
    
    // Variations
    @each $variant, $percentage in $color-variations {
      --#{$name}-#{$variant}: #{if($theme == 'light',
        color.scale($color, $lightness: $percentage),
        color.scale($color, $lightness: $percentage * -1)
      )};
    }
    
    // Opacity variations
    @each $level, $opacity in $opacity-levels {
      --#{$name}-#{$level}: #{rgba($color, $opacity)};
    }
    
    // State variations
    --#{$name}-hover: var(--#{$name}-#{if($theme == 'light', 'dark', 'light')});
    --#{$name}-active: var(--#{$name}-#{if($theme == 'light', 'darker', 'lighter')});
    --#{$name}-disabled: var(--#{$name}-50);
  }

   // Background & Border
   @if $theme == 'light' {
    --bg-primary: var(--light);
    --bg-secondary: #{color.scale(map.get($colors, 'light'), $lightness: -5%)};
    --bg-tertiary: #{color.scale(map.get($colors, 'light'), $lightness: -10%)};
    --border-color: #{rgba(map.get($colors, 'dark'), 0.1)};
    --border-color-dark: #{rgba(map.get($colors, 'dark'), 0.2)};
  } @else {
    --bg-primary: var(--dark);
    --bg-secondary: #{color.scale(map.get($colors, 'dark'), $lightness: 5%)};
    --bg-tertiary: #{color.scale(map.get($colors, 'dark'), $lightness: 10%)};
    --border-color: #{rgba(map.get($colors, 'light'), 0.07)};
    --border-color-dark: #{rgba(map.get($colors, 'light'), 0.15)};
  }

    
  // Text Colors
  @if $theme == 'light' {
    --text-primary: var(--dark);
    --text-secondary: #{rgba(map.get($colors, 'dark'), 0.7)};
    --text-tertiary: #{rgba(map.get($colors, 'dark'), 0.5)};
    --text-disabled: #{rgba(map.get($colors, 'dark'), 0.3)};
    --text-inverse: var(--light);
  } @else {
    --text-primary: var(--light);
    --text-secondary: #{rgba(map.get($colors, 'light'), 0.7)};
    --text-tertiary: #{rgba(map.get($colors, 'light'), 0.5)};
    --text-disabled: #{rgba(map.get($colors, 'light'), 0.3)};
    --text-inverse: var(--dark);
  }


  // Link Colors
  --link-color: var(--primary);
  --link-hover-color: #{color.scale(map.get($colors, 'primary'), $lightness: if($theme == 'light', -10%, 10%))};
  --link-active-color: #{color.scale(map.get($colors, 'primary'), $lightness: if($theme == 'light', -20%, 20%))};
  --link-visited-color: #{color.scale(map.get($colors, 'primary'), $saturation: -20%)};

  // Navigation
  --nav-bg: var(--bg-primary);
  --nav-hover: var(--bg-secondary);
  --nav-active: var(--bg-tertiary);
  --nav-text: var(--text-primary);
  --nav-text-hover: var(--primary);
  --nav-border: var(--border-color);

  // Tooltip
  --tooltip-bg: #{if($theme == 'light', map.get($colors, 'dark'), map.get($colors, 'light'))};
  --tooltip-text: #{if($theme == 'light', map.get($colors, 'light'), map.get($colors, 'dark'))};
  --tooltip-shadow-color: #{if($theme == 'light', '0,0,0', '255,255,255')};
  --microtip-transition-duration: 0.18s;
  --microtip-transition-delay: 0s;
  --microtip-transition-easing: cubic-bezier(0.16, 1, 0.3, 1);
  --microtip-font-size: 0.875rem;
  --microtip-font-weight: 500;
  --microtip-text-transform: none;

  // Shadow
  // --shadow-color: #{if($theme == 'light', '0,0,0', '255,255,255')};
  // --shadow-opacity: #{if($theme == 'light', 0.1, 0.5)};
}

// --shadow-color: 255,0,0


// --border-color
// --bg-secondary
// --border-color-dark
// --primary-dark





// --font-family-base
// --font-family-heading
// --text-primary
// --link-color
// --link-hover-color
// --nav-bg
// --nav-hover
// --nav-text



// // todo: in display.scss file not uesed
// --microtip-transition-duration
// --microtip-transition-delay
// --microtip-transition-easing
// --microtip-text-transform
// --microtip-font-weight
// --microtip-font-size




/**
.btn-primary {
  background-color: theme-color('primary');
  
  &:hover {
    background-color: theme-color('primary', 'hover');
  }
  
  &:disabled {
    background-color: theme-color('primary', 'disabled');
  }
}

.form-input {
  border-color: var(--border-color);
  color: var(--text-primary);
  
  &:focus {
    border-color: theme-color('primary');
    box-shadow: 0 0 0 4px theme-color('primary', '25');
  }
}
 */