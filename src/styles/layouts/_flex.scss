@use 'sass:math';
@use '../utilities/variables' as *;
@use '../utilities/functions' as *;

// Flex Container Mixins
@mixin flex {display: flex;}
@mixin flex-inline {display: inline-flex;}

// Direction Mixins
@mixin row {flex-direction: row;}
@mixin row-reverse {flex-direction: row-reverse;}
@mixin col {flex-direction: column;}
@mixin col-reverse {flex-direction: column-reverse;}

// Wrap Mixins
@mixin wrap {flex-wrap: wrap;}
@mixin nowrap {flex-wrap: nowrap;}
@mixin wrap-reverse {flex-wrap: wrap-reverse;}

// Main Axis Alignment Mixins
@mixin start {justify-content: flex-start;}
@mixin end {justify-content: flex-end;}
@mixin center {justify-content: center;}
@mixin between {justify-content: space-between;}
@mixin around {justify-content: space-around;}
@mixin evenly {justify-content: space-evenly;}

// Cross Axis Alignment Mixins
@mixin x-start {align-items: flex-start;}
@mixin x-end {align-items: flex-end;}
@mixin x-center {align-items: center;}
@mixin x-stretch {align-items: stretch;}
@mixin x-baseline {align-items: baseline;}

// Cross Axis Content Mixins
@mixin x-content-start { align-content: flex-start; }
@mixin x-content-end { align-content: flex-end; }
@mixin x-content-center { align-content: center; }
@mixin x-content-between { align-content: space-between; }
@mixin x-content-around { align-content: space-around; }
@mixin x-content-evenly { align-content: space-evenly; }
@mixin x-content-stretch { align-content: stretch; }

// Self Alignment Mixins
@mixin self-auto {align-self: auto;}
@mixin self-start {align-self: flex-start;}
@mixin self-end {align-self: flex-end;}
@mixin self-center {align-self: center;}
@mixin self-stretch {align-self: stretch;}

@mixin shrink {flex-shrink: 1;}
@mixin shrink-0 {flex-shrink: 0;}
@mixin shrink-2 {flex-shrink: 2;}

// Flex Child Mixins
@mixin f-w-full {flex: 0 0 100%;}
@mixin f-w-auto {flex: 1 1 auto;}
@mixin grow { flex: 1 1 0%; }
@mixin no-grow { flex: none; }

@mixin w-col($size) {
  flex: 0 0 math.percentage(math.div($size, $column-count));
}

// Base flex container
.flex {
  display: flex;
  
  // Direction modifiers
  &.row { flex-direction: row; }
  &.row-reverse { flex-direction: row-reverse; }
  &.col { flex-direction: column; }
  &.col-reverse { flex-direction: column-reverse; }
  
  // Wrap modifiers
  &.wrap { flex-wrap: wrap; }
  &.nowrap { flex-wrap: nowrap; }
  &.wrap-reverse { flex-wrap: wrap-reverse; }
  
  // Justify modifiers
  &.start { justify-content: flex-start; }
  &.end { justify-content: flex-end; }
  &.center { justify-content: center; }
  &.between { justify-content: space-between; }
  &.around { justify-content: space-around; }
  &.evenly { justify-content: space-evenly; }
  
  // Align modifiers
  &.x-start { align-items: flex-start; }
  &.x-end { align-items: flex-end; }
  &.x-center { align-items: center; }
  &.x-baseline { align-items: baseline; }
  &.x-stretch { align-items: stretch; }
  
  &.x-content-start { align-content: flex-start; }
  &.x-content-end { align-content: flex-end; }
  &.x-content-center { align-content: center; }
  &.x-content-between { align-content: space-between; }
  &.x-content-around { align-content: space-around; }
  &.x-content-evenly { align-content: space-evenly; }
  &.x-content-stretch { align-content: stretch; }

  // Child flex items (using column count)
  > .w-auto { @include f-w-auto }
  > .w-full { @include f-w-full }
  > .grow { @include grow; }
  > .no-grow { @include no-grow; }

  > .order-first { order: -1; }
  > .order-last { order: 9999; }
  > .order-none { order: 0; }

  > .shrink { @include shrink; }
  > .shrink-0 { @include shrink-0; }
  > .shrink-2 { @include shrink-2; }
  @for $i from 1 through $column-count {
    > .w-#{$i} { @include w-col($i) }
    > .order-#{$i} { order: $i; }
  }
}


// Responsive variants
@each $breakpoint, $width in $breakpoints {
  @media (min-width: $width) {
    .flex {
      // Direction
      &.row\@#{$breakpoint} { flex-direction: row; }
      &.row-reverse\@#{$breakpoint} { flex-direction: row-reverse; }
      &.col\@#{$breakpoint} { flex-direction: column; }
      &.col-reverse\@#{$breakpoint} { flex-direction: column-reverse; }
      
      // Wrap
      &.wrap\@#{$breakpoint} { flex-wrap: wrap; }
      &.nowrap\@#{$breakpoint} { flex-wrap: nowrap; }
      &.wrap-reverse\@#{$breakpoint} { flex-wrap: wrap-reverse; }
      
      // Justify
      &.start\@#{$breakpoint} { justify-content: flex-start; }
      &.end\@#{$breakpoint} { justify-content: flex-end; }
      &.center\@#{$breakpoint} { justify-content: center; }
      &.between\@#{$breakpoint} { justify-content: space-between; }
      &.around\@#{$breakpoint} { justify-content: space-around; }
      &.evenly\@#{$breakpoint} { justify-content: space-evenly; }

      // Align
      &.x-start\@#{$breakpoint} { align-items: flex-start; }
      &.x-end\@#{$breakpoint} { align-items: flex-end; }
      &.x-center\@#{$breakpoint} { align-items: center; }
      &.x-baseline\@#{$breakpoint} { align-items: baseline; }
      &.x-stretch\@#{$breakpoint} { align-items: stretch; }

      &.x-content-start\@#{$breakpoint} { align-content: flex-start; }
      &.x-content-end\@#{$breakpoint} { align-content: flex-end; }
      &.x-content-center\@#{$breakpoint} { align-content: center; }
      &.x-content-between\@#{$breakpoint} { align-content: space-between; }
      &.x-content-around\@#{$breakpoint} { align-content: space-around; }
      &.x-content-evenly\@#{$breakpoint} { align-content: space-evenly; }
      &.x-content-stretch\@#{$breakpoint} { align-content: stretch; }
      
      // Width (using column count)
      & > .w-auto\@#{$breakpoint} { @include f-w-auto; }
      & > .w-full\@#{$breakpoint} { @include f-w-full; }
      & > .grow\@#{$breakpoint} { @include grow; }
      & > .no-grow\@#{$breakpoint} { @include no-grow; }
      & > .order-first\@#{$breakpoint} { order: -1; }
      & > .order-last\@#{$breakpoint} { order: 9999; }
      & > .order-none\@#{$breakpoint} { order: 0; }
      @for $i from 1 through $column-count {
        & > .w-#{$i}\@#{$breakpoint} { @include w-col($i) }
        & > .order-#{$i}\@#{$breakpoint} { order: $i; }
        & > .shrink\@#{$breakpoint} { @include shrink; }
        & > .shrink-0\@#{$breakpoint} { @include shrink-0; }
        & > .shrink-2\@#{$breakpoint} { @include shrink-2; }
      }
    }
  }
}